[{"content":"Download the Clash Core #Clash is a general-purpose proxy core developed in Go that supports multiple proxy protocols (e.g., vmess, vless, trojan, shadowsocks, socks, http, etc.). It does not include a GUI and only runs the core logic. It must be used with a configuration file or a control panel (e.g., Clash Verge, Meta UI, Yacd).\nThe original and Premium versions of Clash have been abandoned. The former Meta version has now been renamed to mihomo.\n# Download the latest Clash.Meta version (Linux amd64) wget https://github.com/MetaCubeX/mihomo/releases/download/v1.19.10/mihomo-linux-amd64-v1.19.10.gz -O clash.meta.gz gunzip clash.meta.gz chmod +x clash.meta Prepare config.yaml #You need a subscription URL (usually provided by your proxy service provider), and a tool to convert it to a Clash config file.\nMethod A: Manual Download Your provider usually offers a downloadable Clash YAML config file. Download and name it config.yaml. For example, using SpeedCat’s converted Clash subscription:\nwget -O config.yaml [your-subscription-url] Method B: Use Subconverter Generate a Clash config file in this format: https://subconverter.yourdomain.com/sub?target=clash\u0026amp;url=your-subscription-url\u0026amp;udp=true Why convert configurations? Because each proxy client (Clash, Surge, Shadowrocket, V2RayN, etc.) uses a different config format, and raw subscriptions (e.g., ss://, vmess://, etc.) need to be converted for compatibility.\nRun clash.meta #./clash.meta You may encounter an error on first run:\nERRO can\u0026#39;t initial GeoIP: can\u0026#39;t download MMDB: context deadline exceeded FATA Parse config error: rules[...] [GEOIP,CN,DIRECT] error: can\u0026#39;t download MMDB: context deadline exceeded This occurs when Clash fails to download the GeoIP file (e.g., MaxMind Country.mmdb) due to network issues.\nGEOIP rules match IPs based on country codes, e.g., GEOIP,CN,DIRECT.\nSolutions:\nOption 1: Manually download using a reachable CDN or proxy: wget https://cdn.jsdelivr.net/gh/Dreamacro/maxmind-geoip@release/Country.mmdb -O Country.mmdb Place it in the same directory as config.yaml.\nOption 2: Temporarily comment out all GEOIP rule lines. Once Clash starts and you have network access, restore the GEOIP lines.\nWhen Clash runs successfully, you should see logs like:\nINFO[...] Start initial configuration in progress INFO[...] Initial configuration complete, total time: XXms Test the Proxy #Set Global System Proxy (Ubuntu 22) #sudo vi /etc/environment Add:\nhttp_proxy=\u0026#34;http://127.0.0.1:7890\u0026#34; https_proxy=\u0026#34;http://127.0.0.1:7890\u0026#34; Apply changes:\nsource /etc/environment Test Connectivity #curl --proxy http://127.0.0.1:7890 https://api.ipify.org Run as a System Service #Create Clash User #sudo useradd -r -s /usr/sbin/nologin clash sudo chown -R clash:clash /opt/clash Why a dedicated user? Principle of Least Privilege Prevent accidental interference Create systemd Service File #sudo vi /etc/systemd/system/clash.service Content:\n[Unit] Description=Clash Meta Service After=network.target [Service] Type=simple User=clash WorkingDirectory=/opt/clash ExecStart=/opt/clash/clash.meta -d . Restart=on-failure LimitNOFILE=1048576 [Install] WantedBy=multi-user.target Copy Runtime Files #sudo cp * /opt/clash Start Service #sudo systemctl daemon-reexec sudo systemctl daemon-reload sudo systemctl enable clash sudo systemctl start clash Check Logs #sudo systemctl status clash journalctl -u clash -f Setup Auto Subscription Updates #Create Update Script #sudo vi /opt/clash/update-clash.sh Content:\n#!/bin/bash CLASH_DIR=\u0026#34;/opt/clash\u0026#34; SUB_URL=\u0026#34;[your-subscription-url]\u0026#34; CONFIG_FILE=\u0026#34;$CLASH_DIR/config.yaml\u0026#34; BACKUP_FILE=\u0026#34;$CLASH_DIR/config.yaml.bak\u0026#34; TMP_FILE=\u0026#34;$CLASH_DIR/config.tmp.yaml\u0026#34; echo \u0026#34;Downloading new config...\u0026#34; if curl -fsSL \u0026#34;$SUB_URL\u0026#34; -o \u0026#34;$TMP_FILE\u0026#34;; then cp \u0026#34;$CONFIG_FILE\u0026#34; \u0026#34;$BACKUP_FILE\u0026#34; mv \u0026#34;$TMP_FILE\u0026#34; \u0026#34;$CONFIG_FILE\u0026#34; echo \u0026#34;Update successful. Restarting Clash...\u0026#34; systemctl restart clash else echo \u0026#34;Download failed. Restoring previous config...\u0026#34; fi Make it executable:\nsudo chmod +x /opt/clash/update-clash.sh Create Cron Job #sudo crontab -e Add:\n0 3 * * * /opt/clash/update-clash.sh \u0026gt;\u0026gt; /opt/clash/update.log 2\u0026gt;\u0026amp;1 Configure Web UI #Directly pull the pre-built UI and save it in the current directory (/opt/clash/ui):\ngit clone https://github.com/metacubex/metacubexd.git -b gh-pages ./ui Modify config.yaml #In config.yaml, edit the external-ui field:\nexternal-controller: 127.0.0.1:9090 # If allowing local network access, bind to 0.0.0.0:9090 external-ui: ui secret: “yourpassword” # Can be customized Restart Clash:\nsudo systemctl restart clash Open your browser and visit: http://localhost:9090/ui/\nPull the updated UI:\nsudo git -C /opt/clash/ui pull -r Update the automatic subscription update script #Since each subscription update overwrites the current config.yaml, add the following code to update-clash.sh:\n1#!/bin/bash 2 3CLASH_DIR=\u0026#34;/opt/clash\u0026#34; 4SUB_URL=\u0026#34;[your subscription link]\u0026#34; 5CONFIG_FILE=\u0026#34;$CLASH_DIR/config.yaml\u0026#34; 6BACKUP_FILE=“$CLASH_DIR/config.yaml.bak” 7TMP_FILE=\u0026#34;$CLASH_DIR/config.tmp.yaml\u0026#34; 8 9# Pull Web UI updates 10git -C /opt/clash/ui pull -r 11 12echo “Downloading Clash configuration subscription...” 13if curl -fsSL “$SUB_URL” -o “$TMP_FILE”; then 14 # Create backup 15 cp “$CONFIG_FILE” “$BACKUP_FILE” 16 mv “$TMP_FILE” “$CONFIG_FILE” 17 18 # Check and append settings 19 sed -i ‘0,/^[[:space:]]*.*external-ui:/s|^\\([[:space:]]*\\).*external-ui:.*|\\1external-ui: ui|’ “$CONFIG_FILE” 20 21 sed -i \u0026#34;0,/^[[:space:]]*.*external-controller:/s|^\\([[:space:]]*\\). *external-controller:.*|\\1external-controller: ‘0.0.0.0:9090’|“ ”$CONFIG_FILE\u0026#34; 22 23 24 if grep -q “^secret:” “$CONFIG_FILE”; then 25 # Replace the original secret 26 sed -i \u0026#39;s/^secret:. */secret: “mypasswd”/\u0026#39; “$CONFIG_FILE” 27 else 28 # Add if not found 29 echo ‘secret: “mypasswd”’ \u0026gt;\u0026gt; “$CONFIG_FILE” 30 fi 31 32 echo “Configuration updated successfully, restarting Clash service...” 33 sudo systemctl restart clash 34else 35 echo “Download failed, restoring old configuration” 36fi ","date":"10 June 2025","permalink":"/en/posts/clash-setup/","section":"Posts","summary":"","title":"Deploying Clash.Meta on Ubuntu as a System Service with Auto Subscription Updates"},{"content":"","date":null,"permalink":"/en/","section":"Haruru","summary":"","title":"Haruru"},{"content":"","date":null,"permalink":"/en/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"This is a new about page #","date":null,"permalink":"/en/about/","section":"Haruru","summary":"","title":""},{"content":"","date":null,"permalink":"/en/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":null,"permalink":"/en/tags/","section":"Tags","summary":"","title":"Tags"}]