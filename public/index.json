[{"content":"","date":null,"permalink":"/","section":"Haruru","summary":"","title":"Haruru"},{"content":"","date":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"下载 Clash 内核 #Clash 是一个基于 Go 开发的通用代理客户端核心，支持多种代理协议（如 vmess, vless, trojan, shadowsocks, socks, http 等）。 它不带 GUI，只负责核心逻辑运行，需要配合配置文件或控制面板（如 Clash Verge、Meta UI、Yacd）来使用。\nClash 原版和 Premium 版已跑路，原 Meta 版现已更名为 mihomo.\n# 下载 Clash.Meta 最新版本（Linux amd64） wget https://github.com/MetaCubeX/mihomo/releases/download/v1.19.10/mihomo-linux-amd64-v1.19.10.gz -O clash.meta.gz gunzip clash.meta.gz chmod +x clash.meta 准备配置文件 config.yaml #你需要一个订阅链接（通常由机场提供），使用工具将其转换为 Clash 配置文件.\n方式 A：手动下载配置 机场后台一般提供 Clash 的 YAML 配置文件下载. 下载后命名为 config.yaml. 我这里使用 SpeedCat 机场的 Clash 订阅链接，它已完成订阅转换，只需直接下载即可：\nwget -O config.yaml [你的订阅地址] 方式 B：使用 Subconverter 你可以用如下格式生成配置文件： https://subconverter.yourdomain.com/sub?target=clash\u0026amp;url=你的订阅链接\u0026amp;udp=true 为什么要用配置转换？ 使用配置转换（例如 Subconverter 或机场提供的转换服务）的原因主要是：不同代理客户端（如 Clash、Surge、Shadowrocket、V2RayN 等）使用的配置格式不同，而订阅链接提供的数据格式通常是通用或原始的（如 ss://, vmess://, trojan:// 等），需要转换成目标客户端支持的格式才能正常使用。\n运行 clash.meta #./clash.meta 初次尝试运行 clash.meta 时可能会报错：\nERRO can\u0026#39;t initial GeoIP: can\u0026#39;t download MMDB: context deadline exceeded FATA Parse config error: rules[...] [GEOIP,CN,直接连接] error: can\u0026#39;t download MMDB: context deadline exceeded 通常是因为 Clash 在尝试在线下载 GeoIP 数据文件（通常是 MaxMind 的 Country.mmdb）时，由于网络问题（如连接超时、被墙等）导致失败，从而导致配置中 GEOIP 规则无法生效，程序直接退出.\nGEOIP会匹配符合国家代码的 IP 地址，例如 GEOIP,cn,DIRECT 就会让所有中国的 IP 地址直连.\n解决方案：\n方法一：使用国内可访问的 CDN 或可以访问外网的代理手动下载： wget https://cdn.jsdelivr.net/gh/Dreamacro/maxmind-geoip@release/Country.mmdb -O Country.mmdb 将其放入 Clash 的配置目录中（与 config.yaml 同目录）.\n方法二：暂时注释掉所有 GEOIP 规则行 如果你第一次运行 Clash 时本身没有代理环境，那么它就无法联网下载 GeoIP 文件.\n可以先：\n暂时注释掉所有 GEOIP 规则行（比如：GEOIP,CN,直接连接），启动 Clash； Clash 成功运行后，你已具备代理环境； 然后再恢复 GEOIP 规则，重新运行 Clash，即可让它联网下载 mmdb 成功. 再次运行 clash.meta ，如果出现形如下面的输出，说明可以正常代理：\nINFO[2025-06-10T15:08:01.720945365+08:00] Start initial configuration in progress INFO[2025-06-10T15:08:01.723899622+08:00] Geodata Loader mode: memconservative INFO[2025-06-10T15:08:01.723923124+08:00] Geosite Matcher implementation: succinct INFO[2025-06-10T15:08:01.738022930+08:00] Initial configuration complete, total time: 16ms 测试代理 #设置全局系统代理 #本文的配置环境为 Ubuntu 22，其他版本的代理配置方式可能不同.\nsudo vi /etc/environment Clash 默认的 Http、Https 端口为 7890，socks 端口为 7891，混合端口为 7892.\n向 /etc/environment添加：\nhttp_proxy=\u0026#34;http://127.0.0.1:7890\u0026#34; https_proxy=\u0026#34;http://127.0.0.1:7890\u0026#34; # ... 使配置生效：\nsource /etc/environment 测试是否生效 #curl --proxy http://127.0.0.1:7890 https://api.ipify.org 应该返回代理出口的 IP .\n配置为系统服务 #创建 clash 用户 #sudo useradd -r -s /usr/sbin/nologin clash sudo chown -R clash:clash /opt/clash 为什么建议创建单独的用户？ 最小权限原则（Principle of Least Privilege）\nClash 不需要管理员权限来运行； 用 root 启动 Clash 会让它拥有系统级权限，一旦程序存在漏洞或被劫持，将可能危及整个系统安全； 专用用户权限受限，即使发生安全问题，影响范围也受限于该用户的目录和资源。 避免误操作或冲突\n系统服务应该与普通用户隔离； 使用专用 clash 用户，避免和你日常账户下的文件、权限、环境变量等相互影响； 多用户环境下，防止其他用户意外终止 Clash 或篡改配置。 创建 Systemd 服务文件 #sudo vi /etc/systemd/system/clash.service 填入以下内容\n[Unit] Description=Clash Meta Service After=network.target [Service] Type=simple User=clash WorkingDirectory=/opt/clash ExecStart=/opt/clash/clash.meta -d . Restart=on-failure LimitNOFILE=1048576 [Install] WantedBy=multi-user.target 拷贝运行文件 ## 在当前 Clash 工作目录下 sudo cp * /opt/clash 启动服务 #sudo systemctl daemon-reexec # 推荐重载 systemd sudo systemctl daemon-reload # 重新加载服务配置 sudo systemctl enable clash # 开机自启 sudo systemctl start clash # 启动 Clash 服务 查看运行状态和日志 ## 查看服务状态 sudo systemctl status clash # 查看运行日志（实时） journalctl -u clash -f 配置订阅自动更新 #创建更新脚本 #sudo vi /opt/clash/update-clash.sh 填入以下内容\n#!/bin/bash CLASH_DIR=\u0026#34;/opt/clash\u0026#34; SUB_URL=\u0026#34;[你的订阅链接]\u0026#34; CONFIG_FILE=\u0026#34;$CLASH_DIR/config.yaml\u0026#34; BACKUP_FILE=\u0026#34;$CLASH_DIR/config.yaml.bak\u0026#34; TMP_FILE=\u0026#34;$CLASH_DIR/config.tmp.yaml\u0026#34; echo \u0026#34;下载 Clash 配置订阅中...\u0026#34; if curl -fsSL \u0026#34;$SUB_URL\u0026#34; -o \u0026#34;$TMP_FILE\u0026#34;; then cp \u0026#34;$CONFIG_FILE\u0026#34; \u0026#34;$BACKUP_FILE\u0026#34; mv \u0026#34;$TMP_FILE\u0026#34; \u0026#34;$CONFIG_FILE\u0026#34; echo \u0026#34;配置更新成功，重新启动 Clash 服务...\u0026#34; systemctl restart clash else echo \u0026#34;下载失败，恢复旧配置\u0026#34; fi 赋予可执行权限\nsudo chmod +x /opt/clash/update-clash.sh 创建定时任务 #sudo crontab -e 添加以下行（每天 3 点更新）\n0 3 * * * /opt/clash/update-clash.sh \u0026gt;\u0026gt; /opt/clash/update.log 2\u0026gt;\u0026amp;1 配置 Web UI #直接拉取预构建的 UI, 保存在当前目录下(/opt/clash/ui):\ngit clone https://github.com/metacubex/metacubexd.git -b gh-pages ./ui 修改 config.yaml #在 config.yaml 中，编辑字段 external-ui:\nexternal-controller: 127.0.0.1:9090 # 若开放局域网访问，绑定 0.0.0.0:9090 external-ui: ui secret: \u0026#34;yourpassword\u0026#34; # 可以自定义 重启 clash：\nsudo systemctl restart clash 打开浏览器访问：http://localhost:9090/ui/\n拉取更新 UI：\nsudo git -C /opt/clash/ui pull -r 更新自动更新订阅脚本 #因每次更新订阅时会覆盖当前的 config.yaml，因此需要在update-clash.sh中新增以下代码： 1#!/bin/bash 2 3CLASH_DIR=\u0026#34;/opt/clash\u0026#34; 4SUB_URL=\u0026#34;[你的订阅链接]\u0026#34; 5CONFIG_FILE=\u0026#34;$CLASH_DIR/config.yaml\u0026#34; 6BACKUP_FILE=\u0026#34;$CLASH_DIR/config.yaml.bak\u0026#34; 7TMP_FILE=\u0026#34;$CLASH_DIR/config.tmp.yaml\u0026#34; 8 9# 拉取 Web UI 更新 10git -C /opt/clash/ui pull -r 11 12echo \u0026#34;下载 Clash 配置订阅中...\u0026#34; 13if curl -fsSL \u0026#34;$SUB_URL\u0026#34; -o \u0026#34;$TMP_FILE\u0026#34;; then 14 # 创建备份 15 cp \u0026#34;$CONFIG_FILE\u0026#34; \u0026#34;$BACKUP_FILE\u0026#34; 16 mv \u0026#34;$TMP_FILE\u0026#34; \u0026#34;$CONFIG_FILE\u0026#34; 17 18 # 检查并追加设置 19 sed -i \u0026#39;0,/^[[:space:]]*.*external-ui:/s|^\\([[:space:]]*\\).*external-ui:.*|\\1external-ui: ui|\u0026#39; \u0026#34;$CONFIG_FILE\u0026#34; 20 21 sed -i \u0026#34;0,/^[[:space:]]*.*external-controller:/s|^\\([[:space:]]*\\).*external-controller:.*|\\1external-controller: \u0026#39;0.0.0.0:9090\u0026#39;|\u0026#34; \u0026#34;$CONFIG_FILE\u0026#34; 22 23 24 if grep -q \u0026#34;^secret:\u0026#34; \u0026#34;$CONFIG_FILE\u0026#34;; then 25 # 替换原有 secret 26 sed -i \u0026#39;s/^secret:.*/secret: \u0026#34;mypasswd\u0026#34;/\u0026#39; \u0026#34;$CONFIG_FILE\u0026#34; 27 else 28 # 没有就添加 29 echo \u0026#39;secret: \u0026#34;mypasswd\u0026#34;\u0026#39; \u0026gt;\u0026gt; \u0026#34;$CONFIG_FILE\u0026#34; 30 fi 31 32 echo \u0026#34;配置更新成功，重新启动 Clash 服务...\u0026#34; 33 sudo systemctl restart clash 34else 35 echo \u0026#34;下载失败，恢复旧配置\u0026#34; 36fi\n","date":"2025 六月 10","permalink":"/posts/clash-setup/","section":"Posts","summary":"","title":"Ubuntu 部署 Clash.Meta 并设置为系统服务与自动订阅更新"},{"content":"你好 #","date":null,"permalink":"/about/","section":"Haruru","summary":"","title":""},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"}]